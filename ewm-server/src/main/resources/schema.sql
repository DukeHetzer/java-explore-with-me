create table if not exists users
(
    id    bigint generated by default as identity primary key,
    email varchar(254) not null,
    name  varchar(250) not null,
    unique (email, name)
);

create table if not exists categories
(
    id   bigint generated by default as identity primary key,
    name varchar(50) not null,
    unique (name)
);

create table if not exists locations
(
    id  bigint generated by default as identity primary key,
    lat double precision not null,
    lon double precision not null
);

create table if not exists events
(
    id                 bigint generated by default as identity primary key,
    category_id        bigint        not null,
    initiator_id       bigint        not null,
    location_id        bigint        not null,
    annotation         varchar(2000) not null,
    confirmed_requests integer,
    description        varchar(7000),
    state              varchar(20),
    title              varchar(120)  not null,
    created_on         timestamp,
    event_date         timestamp     not null,
    paid               boolean       not null,
    participant_limit  integer default 0,
    published_on       timestamp,
    request_moderation boolean default true,
    views              bigint,
    foreign key (category_id) references categories (id),
    foreign key (initiator_id) references users (id),
    foreign key (location_id) references locations (id)
);

create table if not exists compilations
(
    id     bigint generated by default as identity primary key,
    pinned boolean not null,
    title  varchar(50)
);

create table if not exists compilation_event
(
    id             bigint generated by default as identity primary key,
    compilation_id bigint not null,
    event_id       bigint not null,
    foreign key (compilation_id) references compilations (id),
    foreign key (event_id) references events (id)
);

create table if not exists requests
(
    id           bigint generated by default as identity primary key,
    event_id     bigint      not null,
    requester_id bigint      not null,
    created      timestamp   not null,
    status       varchar(20) not null,
    foreign key (event_id) references events (id),
    foreign key (requester_id) references users (id)
);